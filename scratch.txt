sequelize model:create --name user --attributes email:string,name:string,password:string

sequelize db:migrate

#Sequelize 5.22 does not play nice with node > 13, so must reinstall, reinstalled everything for good measure
npm i dotenv ejs express express-ejs-layouts morgan pg sequelize

added in constraints and validations

sequelize model:create --LunchesFoods --attributes lunchId:integer,foodId:integer
sequelize model:create --name users_foods --attributes userId:integer,foodId:integer

router.get ('/foods', (req, res) => {
    // let food;
    // let lunch;
    db.lunch.findAll({
        where: {
            userId: '1'
        }
    }).then(res => {
    //    let lunch = lunch;
        db.food.findAll({
            where: {
                id: '35'
            }
        })
    }).then(res => {
        // let food = food;
        console.log(lunch)
        console.log(food)
        res.render('/food/foods', {food:food, lunch:lunch})
    })

    <a href="/food<%=food.dataValues.fdcId %>"><%= food.dataValues.description> %></a>

        db.user.findOne({
        where: {id:1}
    }).then(user => {
        console.log(user, '---------------------')
        db.lunch.findAll({
        where: {id: 35},
        include: [db.food]
    })
}).then(lunch => {
        console.log(lunch, '---------------------')
            console.log(`this ${lunch} contains these ${food}`)
            res.render('/food/foods', {lunch:lunch, food:food})
    })
});

app.get('/profile', isLoggedIn, (req, res) => {
  db.lunch.findAll({
    where: {
      userId: req.user.id,
      include: [db.food]
    }
  })
  .then((lunch) => {
    // console.log(req.session.testVar);
    console.log(res.locals.currentUser)
    let user = req.user;
    res.render('profile', {lunch:lunch, lunch.food, user:user});
  })
});

<%= currentUser.name %>
<ul>
    <% lunch.forEach(lunch => { %>     
    <li><%= lunch.name%></li>
    <form method="POST" action="/profile/<%= lunch.id %>?_method=DELETE">
        <button type="submit"  value="DELETE">Delete Lunch</button>
      </form>
     
    <% }); %>
</ul>


app.get('/', (req, res) => {
  let usdaURL = `https://api.nal.usda.gov/fdc/v1/foods/list?api_key=${process.env.USDA_API_KEY}`;
  axios.get(usdaURL).then(apiResponse => {
    let food = apiResponse.data;
    let user = req.user;
    res.render('index', {food: food.slice(0, 1), user:user});
  });
});

<main>
    <% food.forEach(function(food) { %>
        <div class="foods">
             <%= food.description %>
            <form method="POST" action="/">
                <input hidden type="text" name="add-to-lunch" value="<%= food.description %>">
                <button type="submit">Add to Lunch.ejs</button>
            </form>
            <form method="GET" action="/results/">
                <input hidden type="text" name="show-data" value="<%= food.fdcId %>">
                <button type="submit">Show Nutrition Data (results.ejs)</button>
            </form>
        </div>
    </form>
        <% }); %> 
</main>

 <%= lunch.food[0].description%>

 <%=  lunch.name %>
<% lunch.food.forEach(lunch => { %>
    <%= lunch.dataValues%>
<% }); %>

heroku addons:create heroku-postgresql:hobby-dev